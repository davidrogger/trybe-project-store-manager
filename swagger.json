{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Project Storage Manager",
    "description": "Primeira API aplicando arquitetura MSC."
  },
  "paths": {
    "/products/search": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Rota responsável por procurar um produto por alguma palavra  ou letra em seu nome.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "<p>Insira a palavra ou letra do nome do produto que deseja procurar.</p>  <ul>  <li>Caso omitido retorna todos produtos.</li>  <li>Caso Não encontre um produto correspondente a palavra procurada retorna uma lista vazia.</li>  </ul>  ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Busca realizada com sucesso!"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Rota responsável por procurar um produto com base no ID fornecido.",
        "parameters": [
          {
            "description": "ID do produto",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Product"
            },
            "description": "Produto encontrado!"
          },
          "404": {
            "description": "Produto não encontrado!"
          },
          "422": {
            "description": "O \"ID\" deve ser um número"
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "description": "Rota responsável por atualizar informações de um produto com base no ID fornecido.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do produto"
          }
        ],
        "requestBody": {
          "required": true,
            "description": "Dados para atualização do produto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/addProduct"
                }
              }
            }
        },
        "responses": {
          "200": {
            "description": "Atualizado com sucesso!",
            "schema": {
              "$ref": "#/definitions/newProduct"
            }
          },
          "400": {
            "description": "Corpo inválido!"
          },
          "404": {
            "description": "ID do produto não encontrado!"
          },
          "422": {
            "description": "O \"ID\" deve ser um número"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "description": "Rota responsável por remover um produto com base no ID fornecido.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do produto",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Produto removido com sucesso"
          },
          "404": {
            "description": "ID do produto não encontrado!"
          },
          "422": {
            "description": "O \"ID\" deve ser um número"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Rota responsável por mostrar todos os produtos cadastrados.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Busca realizada com sucesso!"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Rota responsável por cadastrar/adicionar um produto novo.",
        "requestBody": {
          "required": true,
          "description": "Deve ser fornecido um corpo com as informações obrigatórias para o cadastro do produto.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/addProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Produto cadastrado com sucesso!",
            "schema": {
              "$ref": "#/definitions/newProduct"
            }
          },
          "400": {
            "description": "Corpo inválido!"
          }
        }
      }
    },
    "/sales/{id}": {
      "get": {
        "tags": [
          "Sales"
        ],
        "description": "Rota responsável por procurar uma venda com base no ID fornecido.",
        "parameters": [
          {
            "required": true,
            "description": "ID da venda",
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Encontrado com sucesso!",
            "schema": {
              "$ref": "#/definitions/Sale"
            }
          },
          "404": {
            "description": "ID da venda não encontrada!"
          },
          "422": {
            "description": "O \"ID\" deve ser um número"
          }
        }
      },
      "put": {
        "tags": [
          "Sales"
        ],
        "description": "Rota responsável por atualizar uma venda com base no ID fornecido.",
        "parameters": [
          {
            "required": true,
            "description": "ID da venda",
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Cada venda pode possuir vários produtos diferentes, por isso o corpo fornecido tem forma de lista(array), com todos os produtos da venda.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/addSale"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Atualizado com sucesso!",
            "schema": {
              "$ref": "#/definitions/addSale"
            }
          },
          "400": {
            "description": "Corpo ou algum campo inválido para atualização!"
          },
          "404": {
            "description": "ID de venda não encontrado!"
          },
          "422": {
            "description": "O \"ID\" deve ser um número"
          }
        }
      },
      "delete": {
        "tags": [
          "Sales"
        ],
        "description": "Rota responsavel por deletar/remover uma venda com base no ID fornecido.",
        "parameters": [
          {
            "required": true,
            "description": "ID da venda",
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Venda removida com sucesso"
          },
          "404": {
            "description": "ID da venda não encontrada!"
          },
          "422": {
            "description": "O \"ID\" deve ser um número"
          }
        }
      }
    },
    "/sales": {
      "get": {
        "tags": [
          "Sales"
        ],
        "description": "Rota responsável por coletar todas as vendas cadastradas.",
        "responses": {
          "200": {
            "description": "Busca realizada com sucesso!"
          }
        }
      },
      "post": {
        "tags": [
          "Sales"
        ],
        "description": "Rota responsável por criar uma nova venda",
        "requestBody": {
          "required": true,
          "description": "Corpo para requisição de cadastro/criação, deve ser enviado em forma de array, com todos os produtos e quantidades definidos.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/addSale"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Venda cadastrada com sucesso!",
            "schema": {
              "$ref": "#/definitions/addSale"
            }
          },
          "400": {
            "description": "Corpo inválido!"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "$ref": "#/definitions/Product"
      },
      "Sale": {
        "$ref": "#/definitions/Sale"
      }
    }
  },
  "definitions": {
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Martelo de Thor"
        }
      }
    },
    "addProduct": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Life Stone"
        }
      }
    },
    "newProduct": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Life Stone"
        }
      }
    },
    "Sale": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "2022-09-02T20:03:53.000Z"
          },
          "productId": {
            "type": "number",
            "example": 1
          },
          "quantity": {
            "type": "number",
            "example": 5
          }
        }
      }
    },
    "addSale": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "number",
            "example": 2
          },
          "quantity": {
            "type": "number",
            "example": 5
          }
        }
      }
    }
  }
}